on:
  workflow_call:

env:
  CMAKE_BUILD_TYPE: Release

jobs:
  build_wheels:
    name: Build wheel for py${{ matrix.python-version }} ${{ matrix.os.platform_id }}
    runs-on: ${{ matrix.os.name }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

        os:
          # - name: "windows-latest"
          - name: "windows-2019"
            platform: "windows"
            platform_id: "win_amd64"
            
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Convert Python version to cpXYZ
        # if: matrix.os.name == 'windows-latest'
        shell: pwsh
        run: |
          # adds poetry path
          echo "C:\Users\runneradmin\.local\bin" >> $env:GITHUB_PATH
          # creates python version env
          $version = "${{ matrix.python-version }}"
          $cp_version = "cp$($version -replace '\.', '')"
          Add-Content -Path $env:GITHUB_ENV -Value "python_cp_version=$cp_version"
          
      - name: Build wheels
        # if: matrix.os.name == 'windows-latest'
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: AMD64
          CIBW_PROJECT_REQUIRES_PYTHON: "~=${{ matrix.python-version }}.0"
          # CMAKE_C_COMPILER: ""
          # CMAKE_CXX_COMPILER: ""
          # CMAKE_GENERATOR: ""
          BUILD_THREADS: 2
          DCMAKE_PREFIX_PATH: "C:/Program Files/zlib"
        shell: cmd
        run: |
          # test 
          if exist C:\Strawberry rmdir /s /q C:\Strawberry
          # install pkg-config
          choco install pkgconfiglite -y
          # install zlib
          powershell -Command "(Invoke-WebRequest -Uri https://git.io/JnHTY -OutFile install_zlib.bat)"; ./install_zlib.bat; del install_zlib.bat
          # test if pkg-config can find zlib
          pkg-config --cflags --libs zlib
          # build wheels
          poetry run python -m cibuildwheel --output-dir .\wheelhouse
          poetry install --no-interaction --no-root --only=build
          poetry run python -m cibuildwheel --output-dir .\wheelhouse

      - name: Publish wheels (dry run)
        # if: matrix.os.name == 'windows-latest'
        shell: cmd
        run: |
          dir .\dist
          poetry publish --dry-run --no-interaction -vvv
