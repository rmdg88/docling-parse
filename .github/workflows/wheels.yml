on:
  workflow_call:

env:
  CMAKE_BUILD_TYPE: Release

jobs:
  build_wheels:
    name: Build wheel for py${{ matrix.python-version }} ${{ matrix.os.platform_id }}
    runs-on: ${{ matrix.os.name }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

        os:
          - name: "windows-latest"
            platform: "windows"
            platform_id: "win_amd64"
            
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-toolchain 
            mingw-w64-i686-toolchain
            
      - name: Set up QPDF external-libs
        shell: pwsh
        run: |
          # Create the directory for external libs
          New-Item -Path 'C:\windows-libs' -ItemType Directory -Force
          
          # Download the ZIP file
          Invoke-WebRequest -Uri 'https://github.com/qpdf/external-libs/releases/download/release-2024-06-07/qpdf-external-libs-bin.zip' -OutFile 'C:\windows-libs\qpdf-external-libs-bin.zip'
          
          # Unzip the downloaded file
          Expand-Archive -Path 'C:\windows-libs\qpdf-external-libs-bin.zip' -DestinationPath 'C:\windows-libs' -Force
          
          # List contents of the directory for verification
          Get-ChildItem -Path 'C:\windows-libs' -Recurse
          
      - name: Set up NASM assembler 
        shell: pwsh
        run: |
          # Create the directory for NASM
          New-Item -Path 'C:\nasm' -ItemType Directory -Force
          
          # Download NASM executable
          Invoke-WebRequest -Uri 'https://fossies.org/windows/misc/nasm-2.16.03-win64.zip/nasm-2.16.03/nasm.exe' -OutFile 'C:\nasm\nasm.exe'
          
          # Update PATH environment variable
          $env:PATH = "C:\nasm;$env:PATH"
          
          # Verify NASM installation
          nasm -v

      - name: Convert Python version to cpXYZ
        shell: pwsh
        run: |
          $version = "${{ matrix.python-version }}"
          $cp_version = "cp$($version -replace '\.', '')"
          Add-Content -Path $env:GITHUB_ENV -Value "python_cp_version=$cp_version"

      - name: Build wheels
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: AMD64
          CIBW_PROJECT_REQUIRES_PYTHON: "~=${{ matrix.python-version }}.0"
          PKG_CONFIG_PATH: "C:/msys64/mingw64/lib/pkgconfig"
          PKG_CONFIG_EXECUTABLE: "C:/msys64/usr/bin/pkg-config.exe"
          CMAKE_PREFIX_PATH: "C:/msys64/mingw64;C:/windows-libs/external-libs"
          CMAKE_LIBRARY_PATH: "C:/msys64/mingw64/lib;C:/windows-libs/external-libs/lib-mingw64"
          CMAKE_INCLUDE_PATH: "C:/msys64/mingw64/include;C:/windows-libs/external-libs/include"
          CMAKE_GENERATOR: "MSYS Makefiles"
          BUILD_THREADS: 1
          ASM_NASM: "C:/nasm/nasm.exe"
        shell: cmd
        run: |
          rmdir /s /q "C:\Strawberry\"
          set PATH=%PATH%;C:\msys64\usr\bin;C:\msys64\mingw64\bin
          set PATH=%PATH%;C:\Users\runneradmin\.local\bin
          set PATH=C:\nasm;%PATH%
          # Pass in zlib and jpeg paths explicitly
          set CMAKE_ARGS=-DZLIB_LIBRARY=C:/windows-libs/external-libs/lib-mingw64/libz.a -DZLIB_INCLUDE_DIR=C:/windows-libs/external-libs/include -DJPEG_LIBRARY=C:/windows-libs/external-libs/lib-mingw64/libjpeg.a -DJPEG_INCLUDE_DIR=C:/windows-libs/external-libs/include
          poetry install --no-interaction --no-root --only=build
          poetry run python -m cibuildwheel --output-dir .\wheelhouse
