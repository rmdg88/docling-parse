on:
  workflow_call:

env:
  CMAKE_BUILD_TYPE: Release

jobs:
  build_wheels:
    name: Build wheel for py${{ matrix.python-version }} ${{ matrix.os.platform_id }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: C:\Users\runneradmin\.local\bin\poetry install --no-interaction --no-root --only=build
        shell: pwsh

      - name: Convert Python version to cpXYZ
        shell: pwsh
        run: |
          $version = "${{ matrix.python-version }}"
          $cp_version = "cp$($version -replace '\.', '')"
          Add-Content -Path $env:GITHUB_ENV -Value "python_cp_version=$cp_version"

      - name: Build wheels
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD_VERBOSITY: 3
        shell: pwsh
        run: |
          Write-Host "Building wheel on Windows"
          C:\Users\runneradmin\.local\bin\poetry run python --version
          C:\Users\runneradmin\.local\bin\poetry run python -m cibuildwheel --output-dir ./wheelhouse
          # Create the output directory
          New-Item -Path .\dist -ItemType Directory -Force
          # Copy the wheels to the dist directory
          Copy-Item -Path wheelhouse\*.whl -Destination .\dist\

      - name: Publish wheels (dry run)
        run: |
          ls -l ./dist
          C:\Users\runneradmin\.local\bin\poetry publish --dry-run --no-interaction -vvv
        shell: pwsh
